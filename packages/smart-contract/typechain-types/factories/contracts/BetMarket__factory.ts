/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BetMarket, BetMarketInterface } from "../../contracts/BetMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_polyToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "eventOutcome",
        type: "bool",
      },
    ],
    name: "MarketClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "createdBy",
        type: "address",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "betType",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PlaceBet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "eventOutcome",
        type: "bool",
      },
    ],
    name: "closeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
    ],
    name: "getMarketData",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalYesAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNoAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "eventCompleted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalYesAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNoAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "eventCompleted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_betType",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "polyToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMarkets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winningAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "winningAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161159838038061159883398101604081905261002f9161015b565b816040518060400160405280600b81526020016a253ab634b0902a37b5b2b760a91b8152506040518060400160405280600381526020016212931560ea1b815250816003908161007f919061022d565b50600461008c828261022d565b5050506001600160a01b0381166100bd57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100c6816100ed565b50600680546001600160a01b0319166001600160a01b0392909216919091179055506102eb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b038116811461015657600080fd5b919050565b6000806040838503121561016e57600080fd5b6101778361013f565b91506101856020840161013f565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806101b857607f821691505b6020821081036101d857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561022857806000526020600020601f840160051c810160208510156102055750805b601f840160051c820191505b818110156102255760008155600101610211565b50505b505050565b81516001600160401b038111156102465761024661018e565b61025a8161025484546101a4565b846101de565b6020601f82116001811461028e57600083156102765750848201515b600019600385901b1c1916600184901b178455610225565b600084815260208120601f198516915b828110156102be578785015182556020948501946001909201910161029e565b50848210156102dc5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61129e806102fa6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638162486b116100b8578063b78d6c1d1161007c578063b78d6c1d146102d4578063bfacba3d146102e7578063da6b4db81461032a578063dd62ed3e1461034a578063f2fde38b14610383578063f47c43cf1461039657600080fd5b80638162486b146102355780638da5cb5b1461023e57806395d89b411461024f578063a9059cbb14610257578063b1283e771461026a57600080fd5b8063313ce567116100ff578063313ce567146101b757806353c06c38146101c65780636faa22a5146101d957806370a0823114610204578063715018a61461022d57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d5780631a38cac61461018f57806323b872dd146101a4575b600080fd5b6101446103a9565b6040516101519190610fc3565b60405180910390f35b61016d61016836600461102d565b61043b565b6040519015158152602001610151565b6002545b604051908152602001610151565b6101a261019d366004611065565b610455565b005b61016d6101b236600461109d565b61073c565b60405160128152602001610151565b6101a26101d43660046110c9565b610760565b6006546101ec906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6101816102123660046110e2565b6001600160a01b031660009081526020819052604090205490565b6101a26107f5565b61018160075481565b6005546001600160a01b03166101ec565b610144610809565b61016d61026536600461102d565b610818565b6102aa6102783660046110c9565b600860205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610151565b6101ec6102e23660046110c9565b610826565b6102aa6102f53660046110c9565b60009081526008602052604090208054600282015460038301546001840154600490940154929491939092909160ff90911690565b6101816103383660046110e2565b60096020526000908152604090205481565b610181610358366004611104565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a26103913660046110e2565b610850565b6101a26103a4366004611137565b61088e565b6060600380546103b890611167565b80601f01602080910402602001604051908101604052809291908181526020018280546103e490611167565b80156104315780601f1061040657610100808354040283529160200191610431565b820191906000526020600020905b81548152906001019060200180831161041457829003601f168201915b5050505050905090565b600033610449818585610953565b60019150505b92915050565b600654604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c791906111a1565b81111561051b5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420616c6c6f77656420746f207370656e642074686973206d756368000060448201526064015b60405180910390fd5b6000848152600860205260409020600481015460ff161561057e5760405162461bcd60e51b815260206004820152601860248201527f54686973206d61726b657420697320636f6d706c6574656400000000000000006044820152606401610512565b806001015442106105c25760405162461bcd60e51b815260206004820152600e60248201526d10995d1d1a5b99c818db1bdcd95960921b6044820152606401610512565b6006546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906111ba565b5060408051606081018252338152602080820186815287158015948401948552600586018054600180820183556000928352949091209451600390910290940180546001600160a01b0319166001600160a01b0390951694909417845590519183019190915591516002909101805460ff19169115159190911790556106dc57828160020160008282546106d191906111ed565b909155506106f69050565b828160030160008282546106f091906111ed565b90915550505b60408051851515815260208101859052339187917f93e4ba582522b998ad9f0fd1bde483b65d1e281ab019af5f6c001f8498c2a24c910160405180910390a35050505050565b60003361074a858285610965565b6107558585856109e3565b506001949350505050565b610768610a42565b600780546000918261077983611200565b90915550600081815260086020526040808220838155600181018690556002810183905560038101929092556004909101805460ff1916905551909150339082907f0811c85262e674546e3cc755cbc4d0d524dd5d28eb031a5d8a12ab8100ec5f20906107e99042815260200190565b60405180910390a35050565b6107fd610a42565b6108076000610a6f565b565b6060600480546103b890611167565b6000336104498185856109e3565b600a818154811061083657600080fd5b6000918252602090912001546001600160a01b0316905081565b610858610a42565b6001600160a01b03811661088257604051631e4fbdf760e01b815260006004820152602401610512565b61088b81610a6f565b50565b610896610a42565b6000828152600860205260409020600481015460ff16156108f95760405162461bcd60e51b815260206004820152601860248201527f4d61726b657420616c726561647920636f6d706c6574656400000000000000006044820152606401610512565b60048101805460ff191660011790556109128383610ac1565b827f41ee1d549fef567720af5965338f43ac949febe75e73dc873f9b84c478cc164483604051610946911515815260200190565b60405180910390a2505050565b6109608383836001610d92565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146109dd57818110156109ce57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610512565b6109dd84848484036000610d92565b50505050565b6001600160a01b038316610a0d57604051634b637e8f60e11b815260006004820152602401610512565b6001600160a01b038216610a375760405163ec442f0560e01b815260006004820152602401610512565b610960838383610e67565b6005546001600160a01b031633146108075760405163118cdaa760e01b8152336004820152602401610512565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008281526008602052604081209082610adf578160020154610ae5565b81600301545b9050600083610af8578260030154610afe565b82600201545b905060005b6005840154811015610c3a576000846005018281548110610b2657610b26611219565b906000526020600020906003020190508515158160020160009054906101000a900460ff16151503610c3157600083826001015486610b65919061122f565b610b6f9190611246565b9050816001015481610b8191906111ed565b82546001600160a01b031660009081526009602052604081208054909190610baa9084906111ed565b90915550506001820154610bbe90826111ed565b82546001600160a01b031660009081526009602052604090205403610c2f578154600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b039092169190911790555b505b50600101610b03565b5060005b600a54811015610d7e57600654600a80546001600160a01b039092169163a9059cbb919084908110610c7257610c72611219565b9060005260206000200160009054906101000a90046001600160a01b031660096000600a8681548110610ca757610ca7611219565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905160e085901b6001600160e01b031916815292909116600483015260248201526044016020604051808303816000875af1158015610d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3991906111ba565b5060096000600a8381548110610d5157610d51611219565b60009182526020808320909101546001600160a01b03168352820192909252604001812055600101610c3e565b50610d8b600a6000610f91565b5050505050565b6001600160a01b038416610dbc5760405163e602df0560e01b815260006004820152602401610512565b6001600160a01b038316610de657604051634a1406b160e11b815260006004820152602401610512565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156109dd57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5991815260200190565b60405180910390a350505050565b6001600160a01b038316610e92578060026000828254610e8791906111ed565b90915550610f049050565b6001600160a01b03831660009081526020819052604090205481811015610ee55760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610512565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610f2057600280548290039055610f3f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f8491815260200190565b60405180910390a3505050565b508054600082559060005260206000209081019061088b91905b80821115610fbf5760008155600101610fab565b5090565b602081526000825180602084015260005b81811015610ff15760208186018101516040868401015201610fd4565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461102857600080fd5b919050565b6000806040838503121561104057600080fd5b61104983611011565b946020939093013593505050565b801515811461088b57600080fd5b60008060006060848603121561107a57600080fd5b83359250602084013561108c81611057565b929592945050506040919091013590565b6000806000606084860312156110b257600080fd5b6110bb84611011565b925061108c60208501611011565b6000602082840312156110db57600080fd5b5035919050565b6000602082840312156110f457600080fd5b6110fd82611011565b9392505050565b6000806040838503121561111757600080fd5b61112083611011565b915061112e60208401611011565b90509250929050565b6000806040838503121561114a57600080fd5b82359150602083013561115c81611057565b809150509250929050565b600181811c9082168061117b57607f821691505b60208210810361119b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156111b357600080fd5b5051919050565b6000602082840312156111cc57600080fd5b81516110fd81611057565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044f5761044f6111d7565b600060018201611212576112126111d7565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761044f5761044f6111d7565b60008261126357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122036cffd223c60b8f409141653b5f092c7b4b8bc6e518f71b52a1b82b09c91034264736f6c634300081b0033";

type BetMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BetMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BetMarket__factory extends ContractFactory {
  constructor(...args: BetMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    admin: AddressLike,
    _polyToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(admin, _polyToken, overrides || {});
  }
  override deploy(
    admin: AddressLike,
    _polyToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(admin, _polyToken, overrides || {}) as Promise<
      BetMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BetMarket__factory {
    return super.connect(runner) as BetMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BetMarketInterface {
    return new Interface(_abi) as BetMarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BetMarket {
    return new Contract(address, _abi, runner) as unknown as BetMarket;
  }
}
